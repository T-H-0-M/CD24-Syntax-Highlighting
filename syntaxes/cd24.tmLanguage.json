{
  "scopeName": "source.cd24",
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#types"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.cd24",
          "match": "\\b(CD24|constants|typedef|def|arraydef|main|begin|end|array|of|func|void|const|for|repeat|until|do|while|if|else|elif|switch|case|default|input|print|printline|return|not|and|or|xor)\\b"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.cd24",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.cd24",
          "match": "\\\\."
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-dash.cd24",
          "match": "/--.*$"
        },
        {
          "name": "comment.block.cd24",
          "begin": "/\\*\\*",
          "end": "\\*\\*/"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.cd24",
          "match": "\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.cd24",
          "match": "\\+|\\-|\\*|\\/|%|=|!=|==|<|>|<=|>=|\\^|\\|\\||&&"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.function.cd24",
          "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\("
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "storage.type.cd24",
          "match": "\\b(int|float|bool|string)\\b"
        }
      ]
    }
  }
}
